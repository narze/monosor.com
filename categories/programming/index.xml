<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on monosor</title>
    <link>/categories/programming/</link>
    <description>Recent content in Programming on monosor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 26 Mar 2016 18:03:24 +0000</lastBuildDate>
    
	<atom:link href="/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setting up TeamViewer on Ubuntu via SSH command line</title>
      <link>/geek/setting-up-teamviewer-on-ubuntu-via-ssh-command-line/</link>
      <pubDate>Sat, 26 Mar 2016 18:03:24 +0000</pubDate>
      
      <guid>/geek/setting-up-teamviewer-on-ubuntu-via-ssh-command-line/</guid>
      <description> SSH into Ubuntu ssh user@your.ubuntu.host Download TeamViewer (32-bit) using wget or curl : wget http://download.teamviewer.com/download/teamviewer_i386.deb Install it sudo dpkg -i teamviewer_linux.deb If dependency problem occurs sudo apt-get -f install then install again sudo dpkg -i teamviewer_linux.deb sudo teamviewer setup then enter your TeamViewer account username &amp;amp; password sudo teamviewer daemon start to start TeamViewer daemon sudo teamviewer daemon enable to enable starting TeamViewer on boot  </description>
    </item>
    
    <item>
      <title>ครั้งแรกกับ Haskell และ Functional Programming</title>
      <link>/programming/%E0%B8%84%E0%B8%A3%E0%B8%B1%E0%B9%89%E0%B8%87%E0%B9%81%E0%B8%A3%E0%B8%81%E0%B8%81%E0%B8%B1%E0%B8%9A-haskell-%E0%B9%81%E0%B8%A5%E0%B8%B0-functional-programming/</link>
      <pubDate>Sun, 20 Mar 2016 16:09:28 +0000</pubDate>
      
      <guid>/programming/%E0%B8%84%E0%B8%A3%E0%B8%B1%E0%B9%89%E0%B8%87%E0%B9%81%E0%B8%A3%E0%B8%81%E0%B8%81%E0%B8%B1%E0%B8%9A-haskell-%E0%B9%81%E0%B8%A5%E0%B8%B0-functional-programming/</guid>
      <description>เมื่อวันก่อนไปเรียน Haskell For Noob ที่ SPRINT3R Geeky Base มา ด้วยความที่ช่วงนี้เห็นภาษาแนว Functional มาแรงในช่วงนี้ ประกอบกับแย่งลงทะเบียนทันเวลา เลยมาลองดู
เริ่มจากการติดตั้ง Haskell ลงบนเครื่องตัวเอง คืนก่อนวันเรียนลองหาข้อมูลไปเจอกับตัว Haskell Stack เห็นว่ามันลงสะดวกดีก็เลยใช้ตัวนี้ (ในคลาสก็ใช้เหมือนกัน) ลงในแมคคำสั่งเดียวใช้ได้เลย ใช้ Homebrew brew install haskell-stack
เนื่องจากเป็นคลาสเบื้องต้น เกือบทั้งวันเลยใช้แค่ GHC (Glasgow Haskell Compiler) เป็นคอมไพเลอร์ที่นิยมใช้กัน กับ GHCi เป็น Interpreter คล้ายๆ กับ irb ใน Ruby เอาไว้ลองศึกษาหรือลองโค้ดเล่นๆ ได้ดี
GHCi ที่มากับตัว Stack รันด้วยคำสั่ง stack ghci แล้ว โหลดไฟล์ .hs ด้วยคำสั่ง :load filename.hs ในคลาสที่เรียนนี้จะใช้วิธีแก้ไฟล์ .hs แล้วใน GHCi ก็รีโหลดด้วยคำสั่ง :reload ให้คอมไพล์ตัวไฟล์เข้ามาใหม่เพื่อรันคำสั่งแต่ละ Function ว่าใช้งานได้ถูกต้องหรือไม่
สิ่งที่ได้จากคลาสนี้ :
 เข้าใจคำว่า Functional Programming มากขึ้นเยอะ จากตอนที้เรียน Prolog สมัยมหาลัยฯ แล้วแทบไม่เข้าใจว่าทำไม Paradigm มันแปลกๆ และดูใช้งานยากจังเลย รื้อฟื้นการเขียน Recursive Function ที่แทบไม่ได้ใช้เลยตอนเขียนเว็บ ที่มาของ map, reduce ที่เห็นในภาษาอื่นๆ ก็เป็น Functional นั่นเอง เหตุผลที่ Functional Programming มาเริ่มฮิตเมื่อไม่นานมานี้ คือเรื่องของประสิทธิภาพในการคำนวนที่สูงขึ้นกว่าแต่ก่อน และ Concurrency Programming Currying ไม่ได้เกี่ยวกับแกงกะหรี่!</description>
    </item>
    
  </channel>
</rss>