[{"categories":null,"content":" Tiny changes make a big difference 1% worse every day for one year = 0.03 1% better every day for one year = 37.78 times better Change your identity instead of just outcome, focus on who you wish to become The goal is not to read a book, the goal is to become a reader. 4 Stages of habit : Cue → Craving → Response → Reward 4 Laws of behavior change Make It Obvious (Inversion : Make It Invisible) Make the cues of good habits obvious \u0026 visible, design your environment. Reduce exposure of the cues of bad habits Make It Attractive (Inversion : Make It Unattractive) Temptation Bundling : Stack needs with wants Reframe mindset : Highlight the benefits of avoiding bad habits Make It Easy (Inversion : Make It Difficult) Decrease steps between you and your good habits Two minute rule : Start a habit which takes less than two minutes to do (Master the art of showing up) Do onetime actions that lock in good habits eg. Unsubscribe from emails Use commitment device eg. Use device to cut off internet at 10 PM Make It Satisfying (Inversion : Make It Unsatisfying) Instant gratification teaches your brain to repeat, so make good habits feel immediately successful Habit tracking : Feel satisfy on making progress Don’t Break The Chain + Never Miss Twice Habit Contract : Find accountability partner to make bad habits unsatisfying Pick the right habit, choose the right field of competition The Goldilocks Rule : Peak motivation when working on just right difficulty Keep improving Habits + Deliberate Practice = Mastery ","date":"2020-07-23","objectID":"/atomic-habits-book-summary/:0:0","tags":null,"title":"Atomic Habits Book Summary","uri":"/atomic-habits-book-summary/"},{"categories":null,"content":"These are my typing practice drills. I tried to do it every day, 20-30 minutes per day. Common words I like typing on 10ff it’s easy to use and I can use custom CSS to force me to look a word ahead I use 2 modes for practice 200 words (60 seconds) https://10fastfingers.com/typing-test/english 200 words (10 minutes) https://10fastfingers.com/widget/typingtest?dur=600 If I don’t have time I’ll skip this one Article - Medium.com I like to read from medium.com, but if I type along I can get 2 birds with 1 stone. It’s not fast but quite fun. Previously I will copy the text from it’s article and type away in a text editor. But if I want to get typing stats I have to save it on 10ff text practice mode or Keyhero custom typing test Caveats: Medium.com will convert quotes and dashes to a beautiful one that is not the same as on your keyboard, like “” or —. I used to replace them with Keyboard Maestro script. Now I’m developing a Chrome extension to scrape article and convert the text for me. It took me 10-15 minutes for 5-min read article, so 1 Medium article and around 15 minutes of common words practice I will call it a day. ","date":"2020-04-12","objectID":"/typing-practice-drills/:0:0","tags":null,"title":"Typing Practice Drills","uri":"/typing-practice-drills/"},{"categories":["Geek","Learn"],"content":"ถ้าใครไม่รู้จัก Sous-vide มันคือการเอาอาหารไปซีลถุงสุญญากาศแล้วเอาไปต้มน้ำอุ่นที่ควบคุมอุณหภูมิไว้ครับ ซึ่งตัวเครื่องแพงเอาเรื่องอยู่ เลยมีคนหาวิธีทำแบบ DIY เลยลองดูครับ สิ่งที่ต้องเตรียม กล่องพลาสติกใส ตัวควบคุมอุณหภูมิ (Thermostat) ผมใช้รุ่น STC-1000 เพื่อนให้มา แท่งความร้อน (Heating Element) อันนี้ซี้อ Lazada ส่งจากต่างประเทศเร็วดี แต่ถ้าไม่รีบสั่ง Aliexpress น่าจะถูกลงอีก Keyword : Heating Element, Water Heater, Immersion Heater สายไฟพร้อมปลั๊กเสียบ ไขควง, คัตเตอร์ ก่อนอื่นดูวิธีจาก Diagram บนตัว STC-1000 กันก่อน เราจะใช้สายไฟกับช่อง 1-2 เพื่อจ่ายไฟเข้ากับ STC-1000 และช่อง 5-6 กับแท่งความร้อน โดยเราจะตัดแบ่งสายไฟมานิดนึงเพื่อใช้กับ Heating Element ทำการปอกสายไฟด้านที่จะต่อกับ STC-1000 ไขน็อตหลัง STC-1000 ออก จะเห็นช่องเสียบสายไฟ ตรงตาม Diagram ใช้ไขควงปากแบนไขตัว Terminal เขียวๆ ทวนเข็มนาฬิกา จนช่องด้านหลังใส่สายไฟเข้าไปได้ ใส่สายไฟเข้าไป แล้วขันตัว Terminal ตามเข็มนาฬิกา จนแน่น สายไฟไม่หลุดออกมาเป็นใช้ได้ เสร็จแล้วเอาไปลองทดสอบดูก่อนว่าใช้ได้ โดยปิดช่องหลัง STC-1000 ก่อนเพื่อความปลอดภัย เสียบไฟ แล้วเปิดเครื่อง เราจะเห็นหน้าจะแสดงอุณหภูมิขึ้นมา ถ้าเราลองกำตัว Sensor แล้วตัวเลขอุณหภูมิสูงขึ้น แสดงว่า Sensor ของ STC-1000 ทำงานได้แล้ว ต่อมาเอาสายที่ตัดเผื่อไว้ ปอกสายแล้วต่อเข้ากับ Heating Element แยกสายอีกด้านออกมา เตรียมสายไฟเปล่าๆ อีกเส้น สั้นๆ เอาไว้ต่อในขั้นถัดไป ถอดสายไฟจากช่อง 1-2 แล้วจับคู่กับสายจาก Heating Element และสายเปล่า เสียบกลับเข้าไป โดยสายเปล่าเชื่อมต่อช่อง 1, 5 สายจาก Heating Element ต่อช่อง 2, 6 สาย Power Supply ช่อง 1, 2 เหมือนเดิม ตอนนี้จะยากหน่อย ทดลองใส่ Heating Element และ Sensor ลงในนำ้ ตั้งค่าไว้ที่ 60 องศา พบว่าแท่งร้อนเร็วมาก นำ้ไม่ท่วม Sensor วัดไม่ทัน เลยไหม้จนดำเลย เจาะกล่องเพื่อใส่ Heating Element และ Sensor ไว้ใกล้ๆ กัน มัด Sensor เข้ากับแท่งร้อนซะ แก้ขัดเวลาอ่านค่าไม่ทัน เพราะนำ้นิ่งๆ ไม่มีการไหลเวียน ประกอบเข้าด้วยกัน ใส่นำ้เกือบเต็ม เสร็จแล้ว ! ทดลองกับเบค่อนของโปรด ทิ้งไว้ข้ามคืน ประมาณ 14 ชั่วโมง ออกมาเป็นแบบนี้ สีชมพูสวยงาม เอาไปทอดในกระทะแบน ไฟปานกลาง ประมาณนาทีนึง หรือนานกว่านี้ถ้าชอบเกรียมๆ ทอดแค่ด้านเดียวก็พอ จะได้เบค่อนแสนอร่อยล้ำ กรอบด้านนึงนุ่มอีกด้าน อร่อยฟินกินเองหมด สรุปผลออกมาเป็นที่น่าพอใจ แต่ยังมีที่ต้องปรับอีกหลายจุด – ตัวแท่งความร้อน Heating Element ไม่ควรแรงเกินไป (ที่ใช้คือ 2000W ไปหาข้อมูลมาแค่ 300-400W ก็เยอะพอแล้ว) ร้อนจนฝาละลาย – Thermostat ควรเป็นแบบ PID จะปรับจูนให้อุณหภูมินิ่งกว่านี้ ตอนนี้ส่ายระดับ 5-10 องศาเพราะตัดไฟไม่ทัน – ควรมีมอเตอร์วนน้ำ แบบที่ใช้ในตู้ปลา ความร้อนจะทั่วถึง ความเย็นไม่นอนที่ก้นกล่อง น่าจะมีภาคต่อหลังจากเปลี่ยนอุปกรณ์เพิ่มเติม หนทางแห่งการ Sous-vide ยังอีกยาวไกล สวัสดี ","date":"2017-01-01","objectID":"/geek/%E0%B8%97%E0%B8%B3%E0%B9%80%E0%B8%84%E0%B8%A3%E0%B8%B7%E0%B9%88%E0%B8%AD%E0%B8%87-sous-vide-%E0%B9%81%E0%B8%9A%E0%B8%9A%E0%B8%9A%E0%B9%89%E0%B8%B2%E0%B8%99%E0%B9%86/:0:0","tags":["cooking","diy","food","sous-vide"],"title":"ทำเครื่อง Sous-vide แบบบ้านๆ","uri":"/geek/%E0%B8%97%E0%B8%B3%E0%B9%80%E0%B8%84%E0%B8%A3%E0%B8%B7%E0%B9%88%E0%B8%AD%E0%B8%87-sous-vide-%E0%B9%81%E0%B8%9A%E0%B8%9A%E0%B8%9A%E0%B9%89%E0%B8%B2%E0%B8%99%E0%B9%86/"},{"categories":["Geek"],"content":"วันนี้น้องที่ทำงานมาแจ้งว่าตัวหนังสือที่พิมพ์ออกมาติดกันเกินไป คำว่า Exclusive ออกมาเป็น Exdusive ให้ช่วยขยาย Font ให้ใหญ่ขึ้นหน่อยจะได้เห็นชัดขึ้น ด้วยความรีบเร่ง ผสมกับความขี้เกียจ ก็เลยเข้าไปแก้ชื่อเป็น Exc lusive ให้ โดยมีเว้นวรรคเข้าไป จบข่าว แต่… น้องยังไม่ยอมจบ เพราะช่องไฟมันยังห่างเกินไป เราก็คิดว่าคงจนตรอกละ ต้องยอมเข้าไปแก้ระบบให้มันมี Space Width เพิ่มขึ้น จนกระทั่งไปเจอไอ้นี่เข้า…Hair Space! Hair Space ที่บางกว่า Space ปกติถึงสามเท่า! รอดตัวไป ขอบคุณ Unicode มา ณ ที่นี้ด้วยครับ ","date":"2016-11-30","objectID":"/geek/%E0%B8%9B%E0%B8%B1%E0%B8%8D%E0%B8%AB%E0%B8%B2%E0%B9%80%E0%B8%AA%E0%B9%89%E0%B8%99%E0%B8%9C%E0%B8%A1/:0:0","tags":null,"title":"ปัญหาเส้นผม","uri":"/geek/%E0%B8%9B%E0%B8%B1%E0%B8%8D%E0%B8%AB%E0%B8%B2%E0%B9%80%E0%B8%AA%E0%B9%89%E0%B8%99%E0%B8%9C%E0%B8%A1/"},{"categories":["Learn"],"content":"บันทึกการใช้ Layout ปัตตะโชติ เมื่อผ่านมาแล้ว 2 อาทิตย์ ยังมีปัญหาจำตัวอักษรได้ไม่หมด โดยเฉพาะตัวที่ไม่ได้ใช้บ่อย และพวกที่ต้องกดพร้อมกับ Shift ยิ่งแทบจำไม่ได้ เลยยังต้องเก็บโพยปัตตะโชติเอาไว้อยู่ ที่พิมพ์ได้คล่องแล้วคือ Home row ที่เอาชุดคำไปขึ้นในเว็บ 10fastfingers แต่พอเริ่มขยายไปแถวอื่นๆ ก็นึกคำที่จะใช้ฝึกได้ไม่ครอบคลุมแล้ว เพราะคำยิ่งเยอะ Combination ก็จะยิ่งเยอะตามไปด้วย เนื่องจากที่ช่วงนี้กำลังลองเล่นภาษา Elixir ก็เลยทดลองเขียนโปรแกรม Generate คำ ที่ประกอบด้วยตัวอักษรที่กำหนดให้ออกมา เช่นถ้าใส่ตัวอักษร ท,ง,ก,า,น,เ เข้าไป จะได้คำภาษาไทยออกมา เป็น กางเกง,งก,ทนง,ทนทาน,นาง,เทา เป็นต้น โดยชุดคำที่นำมาใช้เอามาจาก Libthai ครับ Blog นี้ใช้เวลาพิมพ์และเรียบเรียงประมาณ 15 นาที นับว่าเร็วขึ้นมาหน่อย ","date":"2016-11-29","objectID":"/learn/%E0%B8%9B%E0%B8%B1%E0%B8%95%E0%B8%95%E0%B8%B0%E0%B9%82%E0%B8%8A%E0%B8%95%E0%B8%B4-3-libthai-elixir/:0:0","tags":["geek","pattachote"],"title":"ปัตตะโชติ #3 – ดึงชุดคำจาก Libthai ด้วย Elixir","uri":"/learn/%E0%B8%9B%E0%B8%B1%E0%B8%95%E0%B8%95%E0%B8%B0%E0%B9%82%E0%B8%8A%E0%B8%95%E0%B8%B4-3-libthai-elixir/"},{"categories":["Learn"],"content":"วันที่สามกับการทดลองฝึกเลย์เอาท์ปัตตะโชติแบบหักดิบ คือไม่สลับไปใช้เกตุมณีเลย ผลคือ พิมพ์เร็วขึ้นเล็กน้อย เป็นประมาณ 12-13 คำต่อนาที หรือประมาณ 50 ตัวอักษรต่อนาที เริ่มจำได้ว่าตัวอักษรอยู่แถวๆ ไหน แต่ยังไม่เป๊ะ โดยเฉพาะตัวที่ไม่ได้ใช้บ่อย หา Resource ในการฝึกแทบไม่ได้เลย เพราะเหตุนี้ Adoption Rate จึงต่ำ ขัดใจกับบางตัวอักษร เช่น ช. ช้าง ที่ต้องยกแคร่ด้วย และสระอุ ที่อยู่ห่างไกลสุดปลายมือ ใช้ไปอีกซักพักคงชิน ในตอนนี้ยังคงต้องพึ่งกระดาษอยู่เพราะยังจำไม่ได้อีกเยอะเลย สิ่งที่ใช้ฝึกตอนนี้คือคุยบน Slack, Telegram อย่างเชื่องช้า และสร้างชุดคำ Home Row ใน 10fastfingers.com เพื่อฝึกให้คล่องเป็นจุดๆ ไป ","date":"2016-11-16","objectID":"/learn/pattachote-2-10fastfingers/:0:0","tags":["pattachote"],"title":"ปัตตะโชติ #2 – 10fastfingers.com","uri":"/learn/pattachote-2-10fastfingers/"},{"categories":["Geek","Learn"],"content":"ก่อนหน้านี้พยายามใช้ปัตตะโชติมาครั้งนึง เมื่อประมาณสามปีที่แล้ว สมัยที่ยังไม่คล่อง Colemak เลยด้วยซำ้ จากการสำรวจจากบทความต่างๆ พบว่าเลยเอ๊าทนี้ (หาตัวการันตไม่เจอโว้ย) มีมานานกว่าที่คิดไว้ ปัตตะโชติ (Pattachote) มีมาตั้งแต่ปี ๒๕๐๙ อายุนับได้ ๕๐ ปีพอดี (ทำไมเรียงเลขไทยแปลกๆ) เป็นแป้นพิมพที่พัฒนาให้พิมพไทยได้ประสิทธิภาพกว่าเกตุมณี ดูได้จากการวางตัวอักษรที่ตัวที่ถูกใช้บ่อยจะอยู่ใกล้แป้นเหย้า (Home Row) และไม่ไปกระจุกตัวกันแถวๆ นิ้วก้อยมึอขวามากเกินไป แต่เลย์เอาท์นี้ (เจอการันต์แล้ว) ก็เสื่อมความนิยมลงไปหลังจากที่เกตุมณีไดัมาตรฐาน มอก. ๖๒๐ (TIS-620) นับว่าเจอชะตากรรมเดียวกับ Dvorak หรืออาจแย่กว่านั้นอีก ถึงวันน้ีรู้จักคนใช้ปัตตะโชติแค่สองคนเอง เหตุผลที่จะลองดูอีกครั้ง เพราะไม่ค่อยไดัพิมพ์ไทยเยอะๆ ในเวลางานแล้ว และทุกวันนี้ก็พิมพ์สัมผัสไทยไม่คล่องเท่าเดิม ต้องก้มมองตลอด อีกอย่างคือ เก็บข้อมูลเผื่อว่าจะได้ออกแบบเลย์เอาท์ใหม่ซะเลย มีนามสกุลอยู่ในคอมทุกเครื่อง เท่โคตรๆ บทความนี้ใช้เวลาพิมพ์ทั้งหมด 2 Pomodoros นับเป็นห้าสิบนาที นับเป็น Character/Min ได้ยังไม่ถืง ๒๐ ตัวต่อนาที ","date":"2016-11-14","objectID":"/geek/%E0%B8%AA%E0%B8%A7%E0%B8%B1%E0%B8%AA%E0%B8%94%E0%B8%B5%E0%B8%9B%E0%B8%B1%E0%B8%95%E0%B8%95%E0%B8%B0%E0%B9%82%E0%B8%8A%E0%B8%95%E0%B8%B4-pattachote-1st-time/:0:0","tags":["pattachote"],"title":"สวัสดีปัตตะโชติ – Pattachote 1st time","uri":"/geek/%E0%B8%AA%E0%B8%A7%E0%B8%B1%E0%B8%AA%E0%B8%94%E0%B8%B5%E0%B8%9B%E0%B8%B1%E0%B8%95%E0%B8%95%E0%B8%B0%E0%B9%82%E0%B8%8A%E0%B8%95%E0%B8%B4-pattachote-1st-time/"},{"categories":["Geek","Programming"],"content":" SSH into Ubuntu ssh user@your.ubuntu.host Download TeamViewer (32-bit) using wget or curl : wget http://download.teamviewer.com/download/teamviewer_i386.deb Install it sudo dpkg -i teamviewer_linux.deb If dependency problem occurs sudo apt-get -f install then install again sudo dpkg -i teamviewer_linux.deb sudo teamviewer setup then enter your TeamViewer account username \u0026 password sudo teamviewer daemon start to start TeamViewer daemon sudo teamviewer daemon enable to enable starting TeamViewer on boot ","date":"2016-03-26","objectID":"/geek/setting-up-teamviewer-on-ubuntu-via-ssh-command-line/:0:0","tags":["ubuntu"],"title":"Setting up TeamViewer on Ubuntu via SSH command line","uri":"/geek/setting-up-teamviewer-on-ubuntu-via-ssh-command-line/"},{"categories":["Programming"],"content":"เมื่อวันก่อนไปเรียน Haskell For Noob ที่ SPRINT3R Geeky Base มา ด้วยความที่ช่วงนี้เห็นภาษาแนว Functional มาแรงในช่วงนี้ ประกอบกับแย่งลงทะเบียนทันเวลา เลยมาลองดู เริ่มจากการติดตั้ง Haskell ลงบนเครื่องตัวเอง คืนก่อนวันเรียนลองหาข้อมูลไปเจอกับตัว Haskell Stack เห็นว่ามันลงสะดวกดีก็เลยใช้ตัวนี้ (ในคลาสก็ใช้เหมือนกัน) ลงในแมคคำสั่งเดียวใช้ได้เลย ใช้ Homebrew brew install haskell-stack เนื่องจากเป็นคลาสเบื้องต้น เกือบทั้งวันเลยใช้แค่ GHC (Glasgow Haskell Compiler) เป็นคอมไพเลอร์ที่นิยมใช้กัน กับ GHCi เป็น Interpreter คล้ายๆ กับ irb ใน Ruby เอาไว้ลองศึกษาหรือลองโค้ดเล่นๆ ได้ดี GHCi ที่มากับตัว Stack รันด้วยคำสั่ง stack ghci แล้ว โหลดไฟล์ .hs ด้วยคำสั่ง :load filename.hs ในคลาสที่เรียนนี้จะใช้วิธีแก้ไฟล์ .hs แล้วใน GHCi ก็รีโหลดด้วยคำสั่ง :reload ให้คอมไพล์ตัวไฟล์เข้ามาใหม่เพื่อรันคำสั่งแต่ละ Function ว่าใช้งานได้ถูกต้องหรือไม่ สิ่งที่ได้จากคลาสนี้ : เข้าใจคำว่า Functional Programming มากขึ้นเยอะ จากตอนที้เรียน Prolog สมัยมหาลัยฯ แล้วแทบไม่เข้าใจว่าทำไม Paradigm มันแปลกๆ และดูใช้งานยากจังเลย รื้อฟื้นการเขียน Recursive Function ที่แทบไม่ได้ใช้เลยตอนเขียนเว็บ ที่มาของ map, reduce ที่เห็นในภาษาอื่นๆ ก็เป็น Functional นั่นเอง เหตุผลที่ Functional Programming มาเริ่มฮิตเมื่อไม่นานมานี้ คือเรื่องของประสิทธิภาพในการคำนวนที่สูงขึ้นกว่าแต่ก่อน และ Concurrency Programming Currying ไม่ได้เกี่ยวกับแกงกะหรี่! Code ที่เขียน, Lecture ที่จด สุดท้ายนี้ขอขอบคุณ @iporsut ที่เปิดโลก Functional Programming ให้ เพื่อนๆ ที่ร่วมเรียนร่วมแชร์ความรู้กัน และ SPRINT3R สำหรับสถานที่ครับ ","date":"2016-03-20","objectID":"/programming/%E0%B8%84%E0%B8%A3%E0%B8%B1%E0%B9%89%E0%B8%87%E0%B9%81%E0%B8%A3%E0%B8%81%E0%B8%81%E0%B8%B1%E0%B8%9A-haskell-%E0%B9%81%E0%B8%A5%E0%B8%B0-functional-programming/:0:0","tags":null,"title":"ครั้งแรกกับ Haskell และ Functional Programming","uri":"/programming/%E0%B8%84%E0%B8%A3%E0%B8%B1%E0%B9%89%E0%B8%87%E0%B9%81%E0%B8%A3%E0%B8%81%E0%B8%81%E0%B8%B1%E0%B8%9A-haskell-%E0%B9%81%E0%B8%A5%E0%B8%B0-functional-programming/"},{"categories":["Productivity"],"content":"Deprecated ตอนนี้ใช้ Karabiner-elements แทนได้แล้ว ปุ่ม Caps Lock นี่ปกติก็แทบไม่ได้ใช้อยู่แล้ว แถมบางครั้งยังน่ารำคาญเพราะทำให้เราพิมพ์ผิดเป็นตัวใหญ่ ฆณ์ฮฉฐฐฯ๊็ อย่าง Colemak ก็เปลี่ยนฟังก์ชั่นของปุ่มนี้เป็น Backspace แต่ยังมีวิธีอื่นที่ทำอะไรได้มากกว่านั้น ด้วยการทำให้มันเป็น Hyper Key Hyper Key เอามาจากปุ่ม Modifier ที่มีในคีย์บอร์ด Space Cadet นอกเหนือจาก Ctrl, Super และ Meta (เดี๋ยวนี้เหลือแต่ Ctrl, Super และ Alt) ซึ่งเราจะใช้ Hyper ร่วมกับปุ่มอื่นๆ เพื่อสร้าง Shortcut แบบกดง่ายจำง่ายของตัวเองกัน เริ่มจากโหลดโปรแกรมที่จำเป็นกันก่อน คือ Seil กับ Karabiner เราจะให้ Hyper Key เป็นการกด Ctrl, Alt (Option), Cmd, Shift พร้อมกันทั้งหมด จะได้ไม่ไปซ้ำกับโปรแกรมอะไรเลยเพราะมันกดยากมาก เราจะใช้ Seil เพื่อ Remap Caps Lock เป็นปุ่มอื่นที่ไม่มีบนคีย์บอร์ดก่อน เช่น F19 แล้วค่อยใช้ Karabiner Remap F19 เป็น Ctrl + Option + Cmd + Shift อีกทีนึง เริ่มจากเปิด Seil แล้วปรับให้ Keycode ของ Caps Lock เป็น 80 ตรงกับ F19 ในตารางด้านล่าง ต่อไปเปิด Karabiner แล้วไปที่แท็บ Misc \u0026 Uninstall แล้วกด Open private.xml จากนั้นคลิกขวาที่ไฟล์แล้ว Open With \u003e Text Edit หรือโปรแกรม Text Editor ตัวไหนก็ได้ จากนั้นนำโค้ดนี้ไปแปะไว้ระหว่าง \u003croot\u003e และ \u003c/root\u003e \u003citem\u003e \u003cname\u003eRemap F19 to Hyper\u003c/name\u003e \u003cappendix\u003eOS X doesn't have a Hyper. This maps F19 to Control + Shift + Option + Command.\u003c/appendix\u003e \u003cidentifier\u003eusercustom.f19_to_hyper\u003c/identifier\u003e \u003cautogen\u003e --KeyToKey-- KeyCode::F19, KeyCode::COMMAND_R, ModifierFlag::OPTION_R | ModifierFlag::SHIFT_R | ModifierFlag::CONTROL_R \u003c/autogen\u003e \u003c/item\u003e เซฟไฟล์ private.xml จากนั้นกลับมาที่โปรแกรม Karabiner แท็บ Change Key กด Reload XML จากนั้นค้นหาและติ๊กที่ช่อง Remap F19 to Hyper เท่านี้ก็จะได้ปุ่ม Hyper key เอาไปใช้ทำ Shortcut ต่างๆ ได้มากมาย ที่ใช้อยู่เช่น เปิด Sublime Text ด้วย Hyper + S แอพอีเมล (Polymail) : Hyper + M Google Chrome : Hyper + C Slack : Hyper + A iTerm2 : Hyper + T Dash : Hyper + D ถ้าอยากให้ทำอะไรได้มากกว่านี้ เช่นถ้ากด Caps Lock เดี่ยวๆ จะกลายเป็น Esc แทน (มีประโยชน์เมื่อใช้ร่วมกับ vim) ให้โหลด private.xml จากที่นี่ไปลงทับของเก่าได้เลย https://github.com/jasonrudolph/keyboard/blob/master/karabiner/private.xml Sources : Fake Hyper key for OSX A useful Caps Lock Key Beyond Ctrl: Make That Caps Lock Key Useful Toward a more useful keyboard ","date":"2016-03-02","objectID":"/productivity/osx-how-to-use-caps-lock-efficiently/:0:0","tags":["geek","howto","mac","osx","productivity"],"title":"[OSX] วิธีใช้ประโยชน์จากปุ่ม Caps Lock","uri":"/productivity/osx-how-to-use-caps-lock-efficiently/"},{"categories":["Productivity"],"content":"รวบรวมและเรียบเรียงจาก SuperLearner และ FourHourWorkWeek มีเทคนิคง่ายๆ ที่ทำให้ความเร็วในการอ่านของเราเพิ่มขึ้นอย่างก้าวกระโดด โดยใช้เวลาฝึกแป๊ปเดียว มีหลักการ 3 ข้อดังนี้ ไม่ออกเสียงตาม (Remove Subvocalization) ปกติแล้วเมื่อเราอ่าน โดยธรรมชาติเราจะออกเสียงตาม (ในใจ) ซึ่งเป็นสิ่งที่ทำให้ความเร็วของการอ่านลดลง เพราะความเร็วของการใช้สายตาอ่าน (Visual) เร็วกว่าการอ่านแบบออกเสียง (Audio) หลายเท่า ลดการกวาดสายตา (Reduce Eye Movements) วิธีที่ดีกว่าการกวาดสายตาเพื่ออ่านแต่ละคำ คือการอ่านแบบกำหนดจุดที่จะอ่านในทุกบรรทัดแบบตายตัว โดยอาจจะแบ่งเป็นบรรทัดละ 3-5 จุดแล้วแต่ความยาวของบรรทัด แล้วให้ใช้จุดนั้นเป็นหลักในการอ่าน ไม่อ่านซ้ำ บอกกับตัวเองว่า เราจะไม่กลับมาอ่านซ้ำอีก จะทำให้เราตั้งใจอ่านและพยายามทำความเข้าใจกับมันได้มากขึ้น ","date":"2016-01-25","objectID":"/productivity/speed-reading-3x/:0:0","tags":["speed-reading"],"title":"เทคนิค Speed Reading 3 ข้อ ที่ทำให้อ่านได้เร็วขึ้นจากเดิม 3 เท่า","uri":"/productivity/speed-reading-3x/"},{"categories":["Learn","review"],"content":"มีโอกาสได้ไปเจอคอร์สออนไลน์ Learning How to Learn บน Coursera เกิดสงสัยว่าเค้าจะสอนอะไรบ้าง ก็เลยลองเรียนดู พบว่ามันน่าสนใจกว่าที่คิดไว้ มีหลายเรื่องที่เราไม่เคยรู้มาก่อน แล้วเอามาใช้จริงได้เลย ผู้สอนนั้นเป็นผู้ที่เชี่ยวชาญในหลายแขนง และใช้เทคนิคต่างๆ ในการเรียนรู้หลักการได้อย่างรวดเร็ว ตั้งแต่เริ่มต้นจนถึงความรู้ขั้นสูงของสาขาวิชานั้นๆ จริงๆ แล้วคอร์สนี้จะเหมาะมากถ้าคนเรียนยังอยู่ในชั้นมัธยมหรือว่ามหาลัย ที่ต้องอ่านหนังสือไปเตรียมสอบ เค้ามีเทคนิคการเตรียมสอบไว้โดยเฉพาะด้วย สรุปเป็นข้อๆ จากสิ่งที่เรียนได้ประมาณนี้ สมองคนเรามีสองโหมดในการคิด คือแบบ Focus และแบบ Diffuse (กระจาย) ซึ่งจะมีประโยชน์ใช้สอยต่างกัน ในบางครั้งเราต้องหัดวิธีการ Switch Mode เพื่อให้เกิด Creativity Chunking หรือการแบ่งส่วนข้อมูลความรู้ให้เล็กลง เพราะว่าส่วน Working Memory ของเรานั้นเก็บข้อมูลได้เพียงเล็กน้อย แล้วใช้การเชื่อมโยงเข้ากับข้อมูลในเชิงลึกมากขึ้น เช่น “ไก่จิกเด็กตายบนปากโอ่ง” เป็น Chunk ที่ดีในการช่วยจำตัวอักษรกลาง Procrastination หรือการผัดวันประกันพรุ่ง แก้ไขได้ด้วยการมองที่ Process (กระบวนการ) แทน Product (ผลลัพธ์) หรือใช้ Pomodoro Technique http://pomodorotechnique.com เพื่อสร้าง Mini Deadline ให้เกิด Focus ได้อย่างรวดเร็ว การใช้ Analogy, Metaphor (อุปมา, อุปลักษณ์) เพื่อช่วยในการจำ นอกจากนี้ยังมีเกร็ดความรู้ต่างๆ ตลอดการเรียน เช่นเรื่องการนอนมีส่วนช่วยในการเรียนรู้อย่างไร, ภาวะ Overlearning, Einstellung Effect เป็นต้น คอร์สนี้ใช้เวลาทั้งหมดประมาณ 4 อาทิตย์ในการเรียน เป็นวิดิโอความยาวประมาณ 4 ชั่วโมง ถ้าสนใจก็ไปลงทะเบียนได้ที่เว็บนี้ https://www.coursera.org/learn/learning-how-to-learn เข้าใจว่าเปิดทุกเดือนครับ ","date":"2016-01-18","objectID":"/review/learning-how-to-learn-online-course/:0:0","tags":["coursera","review","tldr"],"title":"รีวิวคอร์สออนไลน์ Learning How to Learn","uri":"/review/learning-how-to-learn-online-course/"},{"categories":["Geek"],"content":"ทุกครั้งที่ลงแมคใหม่ ด้วยความที่เป็นคนชอบใช้โปรแกรมเยอะมาก ก็จะเริ่มจากการโหลดทุกอย่างให้ครบซะก่อนจะทำอะไรอย่างอื่น ไล่เรียงออกมาจะได้ประมาณนี้ Google Chrome (สมัยยังใช้ Windows พูดเป็นประจำว่า “IE มีไว้เพื่อโหลด Chrome”) เดี๋ยวนี้ยังดีที่เซ็ตติ้งทุกอย่าง Sync มาได้เลย เมื่อก่อนต้องก๊อปโปรไฟล์มาแปะตลอด Dropbox พวกเซ็ตติ้งของแอพอื่นๆ ที่ไม่มี Sync ก็เอาไว้ในนี้ แต่เดี๋ยวนี้เริ่มหันไปใช้ BTSync Evernote ช่วงนี้จะโดนโพสโจมตีบ่อยๆ แต่ก็ยังจงรักภักดีอยู่ แถมยังลืมยกเลิกสมาชิกรายปีอีกตะหาก Slack ไว้คุยงาน Text Editor ต่างๆ (Atom, Sublime Text) iTerm2 แทน Terminal Alfred 2 แทน Spotlight Search (เมื่อก่อนใช้ Quicksilver เพราะฟรี) Karabiner ทำปุ่มลัดแบบ Geek สุดๆ มีอีกเยอะมากๆ ถ้าเป็นเมื่อก่อนก็ใช้เวลาทั้งวัน เพราะกว่าจะหาเว็บ เข้าไปโหลด เปิดไฟล์ ลากไปวางใน /Applications หรือบางตัวก็คลิกเปิด .pkg กด Nextๆๆ เช็คว่ามีไป่ตู้แถมมาด้วยไหม #เดี๋ยวๆ ทีนี้ไปเจอ Homebrew Cask เข้า มันคือตัวที่จะช่วยให้เราลงโปรแกรมเหล่านี้ได้ในการพิมพ์บรรทัดเดียว ต่อแอพนึง แล้วเราไม่ต้องทำอะไรเลยเพราะมันจะ Install ให้เราเสร็จสรรพ ตัว Homebrew Cask นั้นเป็นตัวเสริมของ Homebrew อีกทีนึง ถ้าใครไม่รู้จัก มันคือ Package Manager ที่เอาไว้ลงนู่นนี่บนเครื่องแมค ผ่าน Terminal ครับ แต่ถ้าเป็น Homebrew เฉยๆ มันจะมีแต่พวก Command Line Tools เช่น git, tmux, node.js เป็นต้น ซึ่งถ้าเราจะใช้งาน Homebrew Cask เราต้องติดตั้ง Homebrew ก่อน โดยเปิด Terminal ขึ้นมาแล้วรันคำสั่งนี้ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" (อาจจะต้องลง Xcode command line tools ด้วยถ้ายังไม่เคยลง) xcode-select --install เมื่อติดตั้งเสร็จเรียบร้อยก็ลง Homebrew Cask ต่อเลย brew install caskroom/cask/brew-cask ทีนี้พอเสร็จแล้วเราสามารถใช้ Homebrew Cask ได้ด้วยคำสั่งที่คล้ายๆ กันกับ Homebrew เพียงแต่เราต้องเพิ่มคำว่า cask เข้าไป เช่น brew cask install google-chrome เพื่อโหลดแอพ Google Chrome หรือ brew cask install slack atom evernote เพื่อลงหลายๆ แอพพร้อมกัน ถ้าไม่แน่ใจว่ามีแอพใน Homebrew Cask รึเปล่า ให้เช็คด้วยคำสั่ง search ตามด้วยชื่อแอพ เช่น brew cask search baidu ถ้ามีโปรแกรมไหนชื่อตามนี้หรือคล้ายๆ กัน ก็จะโผล่มาให้เราเห็น ดันมีจริงๆ ซะด้วย… พอใช้ไปซักพักถ้าแอพมีการอัพเดทแต่ภายในแอพไม่มีตัว Audoupdate เราสามารถใช้ brew cask install appname --force เพื่อบังคับให้ลงใหม่ได้ แต่ก่อนหน้านั้นควรใช้คำสั่ง brew cask update ก่อนเพื่อดึงข้อมูลเวอร์ชั่นใหม่สุดของแต่ละแอพเข้ามาเก็บไว้ก่อนครับ อันนี้เป็นโปรแกรมต่างๆ ที่ผมลงในปัจจุบันด้วย Cask ครับ ","date":"2015-11-22","objectID":"/geek/homebrew-cask/:0:0","tags":["cask","geek","homebrew","howto","mac","osx","productivity","utilities"],"title":"ลงแอพแมคแบบไม่ต้องเข้าเว็บด้วย Homebrew Cask","uri":"/geek/homebrew-cask/"}]